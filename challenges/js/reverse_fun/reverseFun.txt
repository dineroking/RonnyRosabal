////Challenge////

Description:

You are going to be given a string. Your job is to return that string in a certain order that I will explain below:

Let's say you start with this: 012345

The first thing you do is reverse it:543210
Then you will take the string from the 1st position and reverse it again:501234
Then you will take the string from the 2nd position and reverse it again:504321
Then you will take the string from the 3rd position and reverse it again:504123

Continue this pattern until you have done every single position, and then you will return the string you have created.
For this particular number, you would return:504132

Input:

A string of length 1 - 1000

Output:

A correctly reordered string.



Other Solutions

function flipNumber (string) {
  let out = [];
  let chars = string.split("");

  while (chars.length) {
    out.push(chars.reverse().shift());
  }

  return out.join("");
}


function flipNumber(n) {
  var length = n.length;
  var result = [];
  for (var i = 0; i < Math.floor(length / 2); i++) {
    result.push(n[length - (i + 1)]);
    result.push(n[i]);
  }
  if (length % 2 !== 0) result.push(n[i]);
  return result.join('');
}


function flipNumber(n)
{
  if (n.length === 1)
    return n;

  n = n.split('').reverse().join('');
  return n[0] + flipNumber(n.substr(1));
}


const flipNumber = n => {
  let output = '';
  for (let i = 0; i < Math.floor(n.length/2); i++) {
    output += `${n[n.length-1-i]}${n[i]}`;
  }
  return n.length%2 ? output + n[Math.ceil(n.length/2-1)] : output;
};


const flipNumber = n => n.length < 2 ? n : n.slice(-1) + n[0] + flipNumber(n.slice(1, -1));
